"""Build navigational star table"""

# built-in libraries
import argparse

# external libraries
# ...

# internal libraries
from .common import tabser

# struct("!HHhe2s3sxxB", ...)  # index, lon, lat, mag, x, abbr, lrc
#          22222 3 111 = 16
STAR_MAP = [
    (( 41,  89),  2.01, (u"\u03b1", "UMi")),  #  *
    ((  2,  29),  2.06, (u"\u03b1", "And")),  #  1
    ((  6, -42),  2.37, (u"\u03b1", "Phe")),  #  2
    (( 10,  56),  2.25, (u"\u03b1", "Cas")),  #  3
    (( 11, -18),  2.04, (u"\u03b2", "Cet")),  #  4
    (( 24, -57),  0.50, (u"\u03b1", "Eri")),  #  5
    (( 32,  23),  2.00, (u"\u03b1", "Ari")),  #  6
    (( 44, -40),  3.20, (u"\u03b8", "Eri")),  #  7
    (( 45,   4),  2.50, (u"\u03b1", "Cet")),  #  8
    (( 51,  50),  1.82, (u"\u03b1", "Per")),  #  9
    (( 69,  16),  0.85, (u"\u03b1", "Tau")),  # 10
    (( 78, - 8),  0.12, (u"\u03b2", "Ori")),  # 11
    (( 79,  46),  0.71, (u"\u03b1", "Aur")),  # 12
    (( 81,   6),  1.64, (u"\u03b3", "Ori")),  # 13
    (( 81,  29),  1.68, (u"\u03b2", "Tau")),  # 14
    (( 84, - 1),  1.70, (u"\u03b5", "Ori")),  # 15
    (( 89,   7),  0.58, (u"\u03b1", "Ori")),  # 16
    (( 96, -53), -0.72, (u"\u03b1", "Car")),  # 17
    ((101, -17), -1.47, (u"\u03b1", "CMa")),  # 18
    ((104, -29),  1.51, (u"\u03b5", "CMa")),  # 19
    ((115,   5),  0.34, (u"\u03b1", "CMi")),  # 20
    ((116,  28),  1.15, (u"\u03b2", "Gem")),  # 21
    ((126, -59),  2.40, (u"\u03b5", "Car")),  # 22
    ((137, -43),  2.23, (u"\u03bb", "Vel")),  # 23
    ((138, -70),  1.70, (u"\u03b2", "Car")),  # 24
    ((142, - 9),  2.00, (u"\u03b1", "Hya")),  # 25
    ((152,  12),  1.35, (u"\u03b1", "Leo")),  # 26
    ((166,  62),  1.87, (u"\u03b1", "UMa")),  # 27
    ((177,  15),  2.14, (u"\u03b2", "Leo")),  # 28
    ((184, -17),  2.80, (u"\u03b3", "Crv")),  # 29
    ((188, -63),  1.40, (u"\u03b1", "Cru")),  # 30
    ((193, -57),  1.63, (u"\u03b3", "Cru")),  # 31
    ((193,  56),  1.76, (u"\u03b5", "UMa")),  # 32
    ((201, -11),  1.04, (u"\u03b1", "Vir")),  # 33
    ((207,  49),  1.85, (u"\u03b7", "UMa")),  # 34
    ((211, -60),  0.60, (u"\u03b2", "Cen")),  # 35
    ((211, -36),  2.06, (u"\u03b8", "Cen")),  # 36
    ((220, -61), -0.01, (u"\u03b1", "Cen")),  # 37
    ((214,  19), -0.04, (u"\u03b1", "Boo")),  # 38
    ((222, -16),  3.28, (u"\u03b1", "Lib")),  # 39
    ((223,  74),  2.08, (u"\u03b2", "UMi")),  # 40
    ((233,  27),  2.24, (u"\u03b1", "CrB")),  # 41
    ((247, -26),  1.09, (u"\u03b1", "Sco")),  # 42
    ((252, -69),  1.92, (u"\u03b1", "TrA")),  # 43
    ((257, -16),  2.43, (u"\u03b7", "Oph")),  # 44
    ((263, -37),  1.62, (u"\u03bb", "Sco")),  # 45
    ((264,  13),  2.10, (u"\u03b1", "Oph")),  # 46
    ((269,  51),  2.23, (u"\u03b3", "Dra")),  # 47
    ((276, -34),  1.80, (u"\u03b5", "Sgr")),  # 48
    ((279,  39),  0.03, (u"\u03b1", "Lyr")),  # 49
    ((284, -26),  2.06, (u"\u03c3", "Sgr")),  # 50
    ((297,   9),  0.77, (u"\u03b1", "Aql")),  # 51
    ((306, -57),  1.91, (u"\u03b1", "Pav")),  # 52
    ((310,  45),  1.25, (u"\u03b1", "Cyg")),  # 53
    ((326,  10),  2.40, (u"\u03b5", "Peg")),  # 54
    ((332, -47),  1.74, (u"\u03b1", "Gru")),  # 55
    ((344, -30),  1.16, (u"\u03b1", "PsA")),  # 56
    ((346,  15),  2.49, (u"\u03b1", "Peg")),  # 57
]


def cli():
    parser = argparse.ArgumentParser()
    
    parser.add_argument("-f", "--field", default="star.nav", type=str,
                        help="nav stars")

    return parser.parse_args()


def main(fout):
    data = [(n, lon, lat, amag, x.encode(), abbr.encode())
            for (n, ((lon, lat), amag, (x, abbr)))
            in enumerate(STAR_MAP)]
    tabser(fout, "!HHhe2s3sxxB", data)


if __name__ == "__main__":
    ns = cli()
    main(ns.field)
